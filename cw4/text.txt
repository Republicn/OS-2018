ключ -g - отладочная информация
-O - копилировать без оптимизаций, а если что-то типа -O0 и тд, то оптимизирует. OS - почти O2, но у меньшает ещё размер кода. 
	Чеи выше цифра, тем агрессивная компиляция.
cc - какой-то компилятор
man gdb - отладочная инфа. консольный дебаггер. start
если запустим gdb ./a.out, можно писать break main(b main), run - запустить, list - описание. info breakpoints. delete 1 - удаляет breakpoint.
continue.
b main, help next. сейчас в main, next - следующая команда. print x. n - перешёл к func, а х теперь поменялся. x - на стеке, y - в сегменте данных.
функция - всегда ссылка
next - не заходит в функцию но выполняет её, а step входит и выполняет
watchpoint - где и как изменялись переменные
disassemble - во что превращается код
%rbp, %rsp - регистры для начала frame и начала Stack?!
info registres
backtrace и слева написан номер frame
pgrep -fl a.out
objdump - отображает информацию из объектных файлов objdump -d a.out
esp  - регистр стека
ret - вовзрат предыдущего вызова функции
api - совместимость на уровне интерфейсв
obi - на уровне двоичного кода, размеров и тд
ebp указывает на  наш frame в стеке
ret:libc - адрес возврата
